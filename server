import { serve } from 'https://deno.land/std@0.210.0/http/server.ts';
import OpenAI from 'https://esm.sh/openai@4.29.1';

const openai = new OpenAI({
  apiKey: Deno.env.get("OPENAI_API_KEY"),
}); 

serve(async (req) => {
  if (req.method !== 'POST') {
    return new Response(JSON.stringify({ error: 'Method not allowed' }), {
      status: 405,
      headers: { 'Content-Type': 'application/json' }
    });
  }

  try {
    const { messages, torahTextUrl } = await req.json();

    let torahText = '';
    if (torahTextUrl) {
      const torahRes = await fetch(torahTextUrl);
      torahText = await torahRes.text();
    }

    messages[0].content += `\nTorah Text Sample:\n${torahText.slice(0, 10000)}`;

    const completion = await openai.chat.completions.create({
      model: 'gpt-4',
      messages,
      temperature: 0.7
    });

    return new Response(JSON.stringify({
      message: completion.choices[0].message?.content
    }), {
      headers: { 'Content-Type': 'application/json' }
    });

  } catch (err) {
    return new Response(JSON.stringify({ error: err.message }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
});
